{
  "type": "object",
  "properties": {
    "id": {
      "type": "string"
    },
    "ver": {
      "type": "string"
    },
    "ts": {
      "type": "string"
    },
    "params": {
      "type": "object",
      "properties": {
        "msgid": {
          "type": "string"
        }
      },
      "required": [
        "msgid"
      ],
      "additionalProperties": false
    },
    "request": {
      "type": "object",
      "properties": {
        "datasets": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["*"]
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            }
          ]
        },
        "categories": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "infra",
                  "ingestion",
                  "processing",
                  "query"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "postgres",
                    "redis",
                    "kafka",
                    "flink",
                    "spark",
                    "druid",
                    "hudi",
                    "PV",
                    "dataIngestedCount",
                    "currentLag",
                    "connectors",
                    "pipeline",
                    "eventsProcessedCount",
                    "avgProcessingSpeedInSec",
                    "validationFailuresCount",
                    "dedupFailuresCount",
                    "denormFailureCount",
                    "transformFailureCount",
                    "indexer",
                    "queriesCount",
                    "avgQueryReponseTimeInSec",
                    "queriesFailed",
                    "queriesTimedout"
                  ]
                },
                "minItems": 1
              }
            },
            "required": [
              "category",
              "components"
            ],
            "if": {
              "properties": {
                "category": {
                  "const": "infra"
                }
              }
            },
            "then": {
              "properties": {
                "components": {
                  "items": {
                    "enum": [
                      "postgres",
                      "redis",
                      "kafka",
                      "flink",
                      "spark",
                      "druid",
                      "hudi",
                      "PV"
                    ]
                  }
                }
              }
            },
            "else": {
              "if": {
                "properties": {
                  "category": {
                    "const": "ingestion"
                  }
                }
              },
              "then": {
                "properties": {
                  "components": {
                    "items": {
                      "enum": [
                        "dataIngestedCount",
                        "currentLag",
                        "connectors"
                      ]
                    }
                  }
                }
              },
              "else": {
                "if": {
                  "properties": {
                    "category": {
                      "const": "processing"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "components": {
                      "items": {
                        "enum": [
                          "pipeline",
                          "eventsProcessedCount",
                          "avgProcessingSpeedInSec",
                          "validationFailuresCount",
                          "dedupFailuresCount",
                          "denormFailureCount",
                          "transformFailureCount"
                        ]
                      }
                    }
                  }
                },
                "else": {
                  "if": {
                    "properties": {
                      "category": {
                        "const": "query"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "components": {
                        "items": {
                          "enum": [
                            "indexer",
                            "queriesCount",
                            "avgQueryReponseTimeInSec",
                            "queriesFailed",
                            "queriesTimedout"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "categories"
      ]
    }
  }
}