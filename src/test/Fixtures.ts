class TestDruidQuery {
  public static VALID_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"timeseries","dataSource":"telemetry-events","aggregations":[{"type":"count","name":"count"}],"granularity":"all","postAggregations":[],"intervals": "2021-02-19/2021-02-20"}}';
  public static HIGH_DATE_RANGE_GIVEN_AS_LIST =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"groupBy","dataSource":"telemetry-events","dimensions":["actor_type","content_framework"],"limit":15, "metric":"count","granularity":"all","intervals":["2021-01-02/2021-02-05"],"aggregations":[{"type":"count","name":"count"}]}}';
  public static HIGH_DATE_RANGE_GIVEN_AS_STRING =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"topN","dataSource":"telemetry-events","dimension":"actor_id","threshold":10,"metric":"count","granularity":"all","intervals":"2020-12-30/2021-02-02","aggregations":[{"type":"count","name":"count"}]}}';
  public static HIGH_THRESHOLD_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"scan","dataSource":"telemetry-events","dimension":"mid","threshold":1000,"metric":"count","granularity":"all","intervals":["2020-12-31/2021-01-01"],"aggregations":[]}}';
  public static HIGH_LIMIT_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"scan","dataSource":"telemetry-events","granularity":"all","intervals":["2020-12-21/2021-01-01"],"resultFormat":"compactedList","limit":1000,"columns":["actor_id", "mid"],"metrics":{"type":"numeric","metric":"count"},"aggregations":[{"type":"count","name":"count"}]}}';
  public static WITHOUT_THRESOLD_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"timeBoundary","dataSource":"telemetry-events","dimension":"content_status","metric":"count","granularity":"all","intervals":["2020-12-21/2020-12-22"],"aggregations":[]}}';
  public static WITHOUT_DATE_RANGE_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"search","dataSource":"telemetry-events","granularity":"all","intervals":"","resultFormat":"compactedList","columns":["__time"],"metrics":{"type":"numeric","metric":"count"},"aggregations":[{"type":"count","name":"count"}]}}';
  public static UNSUPPORTED_DATA_SOURCE =
    '{"context":{"dataSource":"invalid_data_source"},"query":{"queryType":"timeBoundary","dataSource":"invalid_data_source","granularity":"all","intervals":["2022-10-17/2022-10-19"],"resultFormat":"compactedList","columns":["__time","scans"],"metrics":{"type":"numeric","metric":"count"},"aggregations":[{"type":"count","name":"count"}]}}';
  public static INVALID_QUERY_TYPE =
    '{"context":{"dataSource":"telemetry-events"},"query":{"queryType":"invalidQueryType", "dataSource":"telemetry-events", "granularity":"all", "intervals":"2021-12-31/2022-01-20"}}';
  public static UNSUPPORTED_SCHEMA =
    '{"context":{},"query":{"queryType":"invalidQueryType", "dataSource":"telemetry-events", "granularity":"all", "intervals":"2021-12-31/2022-01-20"}}';
  public static VALID_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT * FROM \\"telemetry-events\\" WHERE __time >= TIMESTAMP \'2020-12-31\' AND __time < TIMESTAMP \'2021-01-21\' LIMIT 10"}}';
  public static HIGH_LIMIT_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT mid FROM \\"telemetry-events\\" WHERE __time >= TIMESTAMP \'2021-01-01\' AND __time < TIMESTAMP \'2021-01-22\' LIMIT 1000"}}';
  public static WITHOUT_LIMIT_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT actor_type, content_status FROM \\"telemetry-events\\" WHERE __time >= TIMESTAMP \'2021-01-01\' AND __time < TIMESTAMP \'2021-01-02\'"}}';
  public static HIGH_DATE_RANGE_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT actor_type, content_status FROM \\"telemetry-events\\" WHERE __time >= TIMESTAMP \'2021-01-01\' AND __time < TIMESTAMP \'2021-02-12\' LIMIT 10"}}';
  public static WITHOUT_DATE_RANGE_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT content_status FROM \\"telemetry-events\\" LIMIT 5"}}';
  public static UNSUPPORTED_DATASOURCE_SQL_QUERY =
    '{"context":{"dataSource":"telemetry-events"},"querySql":{"query":"SELECT __time FROM \\"invalid-datasource\\" LIMIT 10"}}';
}

class TestDataIngestion {
  public static SAMPLE_INPUT = { "data": { "id": "beckn-batch-1", "events": [{ "context": { "transaction_id": "3d3bac46-d252-4da0-9290-afdd524d0214", "country": "IND", "bpp_id": "becknify.humbhionline.in.mobility.BPP/beckn_open/app1-succinct-in", "city": "std:080", "message_id": "52dcf5a9-8986-47ff-a9d0-f380b23e3dfe", "core_version": "0.9.1", "ttl": "PT1M", "bap_id": "mobilityreferencebap.becknprotocol.io", "domain": "nic2004:60221", "bpp_uri": "https://becknify.humbhionline.in/mobility/beckn_open/app1-succinct-in/bpp", "action": "on_status", "bap_uri": "https://mobilityreferencebap.becknprotocol.io", "timestamp": "2023-02-22T19:06:27.887Z" }, "message": { "order": { "quote": { "breakup": [{ "price": { "currency": "INR", "value": "58.2936244525222" }, "type": "item", "title": "Fare" }, { "price": { "currency": "INR", "value": "10.492852401453995" }, "type": "item", "title": "Tax" }], "price": { "currency": "INR", "value": "68.7864768539762" } }, "provider": { "locations": [{ "gps": "12.973437,77.608771", "id": "./mobility/ind.blr/17@taxi.becknprotocol.io.provider_location" }], "id": "./mobility/ind.blr/7@taxi.becknprotocol.io.provider", "descriptor": { "images": ["https://taxi.becknprotocol.io/companies/view/7"], "name": "Best Taxies" }, "categories": [{ "id": "./mobility/ind.blr/1@taxi.becknprotocol.io.category", "descriptor": { "name": "Premium Taxi" } }], "items": [{ "category_id": "./mobility/ind.blr/1@taxi.becknprotocol.io.category", "price": { "currency": "INR", "value": "68.7864768539762" }, "descriptor": { "images": ["https://taxi.becknprotocol.io/resources/images/car.png"], "code": "Premium Taxi-FuelType:Diesel,Make:Maruti,NameOfModel:Brezza,VehicleType:Premium Taxi", "name": "Premium Taxi-FuelType:Diesel,Make:Maruti,NameOfModel:Brezza,VehicleType:Premium Taxi" }, "id": "./mobility/ind.blr/17@taxi.becknprotocol.io.item", "fulfillment_id": "./mobility/ind.blr/6285@taxi.becknprotocol.io.fulfillment", "tags": { "NameOfModel": "Brezza", "VehicleType": "Premium Taxi", "Make": "Maruti", "FuelType": "Diesel" } }] }, "id": "./mobility/ind.blr/6285@taxi.becknprotocol.io.order", "state": "Awaiting Driver acceptance", "fulfillment": { "agent": { "phone": "+919082233441", "name": "Michel MJ" }, "start": { "location": { "gps": "12.973437,77.608771" } }, "end": { "location": { "gps": "12.935193,77.624481" } }, "id": "./mobility/ind.blr/6285@taxi.becknprotocol.io.fulfillment", "vehicle": { "registration": "KA 05 3456" }, "customer": { "person": { "name": "./Rajat/Mr./Rajat/ /Kumar/" }, "contact": { "phone": "+919867654322", "email": "er.rjtkumar@gmail.com" } } }, "items": [{ "category_id": "./mobility/ind.blr/1@taxi.becknprotocol.io.category", "price": { "currency": "INR", "value": "68.7864768539762" }, "descriptor": { "images": ["https://taxi.becknprotocol.io/resources/images/car.png"], "code": "Premium Taxi-FuelType:Diesel,Make:Maruti,NameOfModel:Brezza,VehicleType:Premium Taxi", "name": "Premium Taxi-FuelType:Diesel,Make:Maruti,NameOfModel:Brezza,VehicleType:Premium Taxi" }, "id": "./mobility/ind.blr/17@taxi.becknprotocol.io.item", "fulfillment_id": "./mobility/ind.blr/6285@taxi.becknprotocol.io.fulfillment", "tags": { "NameOfModel": "Brezza", "VehicleType": "Premium Taxi", "Make": "Maruti", "FuelType": "Diesel" } }], "billing": { "address": { "country": "IND", "door": "MBT", "city": "std:080", "area_code": "560078", "name": "RajatKumar", "locality": "", "building": ",A33" }, "phone": "+919867654322", "name": "./Rajat/Mr./Rajat/ /Kumar/", "email": "er.rjtkumar@gmail.com" } } } }, { "context": { "domain": "nic2004:60221", "country": "IND", "city": "std:080", "core_version": "0.9.1", "action": "track", "bap_id": "mobilityreferencebap.becknprotocol.io", "bap_uri": "https://mobilityreferencebap.becknprotocol.io", "bpp_id": "becknify.humbhionline.in.mobility.BPP/beckn_open/app1-succinct-in", "bpp_uri": "https://becknify.humbhionline.in/mobility/beckn_open/app1-succinct-in/bpp", "transaction_id": "3d3bac46-d252-4da0-9290-afdd524d0214", "message_id": "b52878f3-28ed-4c31-8ebb-8989f33c3220", "timestamp": "2023-02-22T19:07:07.887Z", "ttl": "PT1M" }, "message": { "order_id": "./mobility/ind.blr/6285@taxi.becknprotocol.io.order" } }] } }
}
class TestDataSchema {
  public static SAMPLE_INPUT = { "dataset": "telemetry-raw", "version": 1.0, "dataSchema": { "type": "object", "properties": { "eid": { "type": "integer" }, "ver": { "type": "string" }, "syncts": { "type": "integer" }, "ets": { "type": "integer" }, "flags": { "type": "object", "properties": { "pp_validation_processed": { "type": "boolean" }, "pp_duplicate": { "type": "boolean" }, "device_denorm": { "type": "boolean" }, "dialcode_denorm": { "type": "boolean" }, "content_denorm": { "type": "boolean" } }, "required": ["pp_validation_processed", "pp_duplicate", "device_denorm", "dialcode_denorm", "content_denorm"] }, "mid": { "type": "string" }, "type": { "type": "string" }, "tags": { "type": "array", "items": { "type": "string" } }, "actor": { "type": "object", "properties": { "id": { "type": "string" }, "type": { "type": "string" } }, "required": ["id", "type"] }, "edata": { "type": "object", "properties": { "topn": { "type": "array", "items": { "type": "object", "properties": { "identifier": { "type": "string" } }, "required": ["identifier"] } }, "query": { "type": "string" }, "size": { "type": "integer" }, "type": { "type": "string" }, "filters": { "type": "object", "properties": { "contentType": { "type": "array", "items": { "type": "string" } }, "mimeType": { "type": "object" }, "resourceType": { "type": "object" }, "status": { "type": "array", "items": { "type": "string" } }, "objectType": { "type": "array", "items": { "type": "string" } }, "dialcodes": { "type": "string" }, "framework": { "type": "object" }, "compatibilityLevel": { "type": "object", "properties": { "max": { "type": "integer" }, "min": { "type": "integer" } }, "required": ["max", "min"] }, "channel": { "type": "object", "properties": { "ne": { "type": "array", "items": { "type": "string" } } }, "required": ["ne"] } }, "required": ["contentType", "mimeType", "resourceType", "status", "objectType", "dialcodes", "framework", "compatibilityLevel", "channel"] }, "sort": { "type": "object" } }, "required": ["topn", "query", "size", "type", "filters", "sort"] }, "@timestamp": { "type": "integer" }, "context": { "type": "object", "properties": { "pdata": { "type": "object", "properties": { "ver": { "type": "string" }, "id": { "type": "string" }, "pid": { "type": "string" } }, "required": ["ver", "id", "pid"] }, "did": { "type": "string" }, "env": { "type": "string" }, "channel": { "type": "string" } }, "required": ["pdata", "did", "env", "channel"] }, "@version": { "type": "string" }, "object": { "type": "object", "properties": { "id": { "type": "string" }, "type": { "type": "string" } }, "required": ["id", "type"] } }, "required": ["eid", "ver", "syncts", "ets", "flags", "mid", "type", "tags", "actor", "edata", "@timestamp", "context", "@version", "object"] }, "ingestionSchema": { "type": "kafka", "spec": { "dataSchema": { "dataSource": "obsrv-telemetry-events", "dimensionsSpec": { "dimensions": [{ "type": "string", "name": "ver" }, { "type": "timestamp", "name": "ets" }, { "type": "boolean", "name": "flags_pp_validation_processed" }, { "type": "boolean", "name": "flags_pp_duplicate" }, { "type": "boolean", "name": "flags_device_denorm" }, { "type": "boolean", "name": "flags_dialcode_denorm" }, { "type": "boolean", "name": "flags_content_denorm" }, { "type": "string", "name": "mid" }, { "type": "string", "name": "type" }, { "type": "array", "name": "tags" }, { "type": "string", "name": "actor_id" }, { "type": "string", "name": "actor_type" }, { "type": "string", "name": "edata_topn[*]_identifier" }, { "type": "string", "name": "edata_query" }, { "type": "string", "name": "edata_type" }, { "type": "array", "name": "edata_filters_contentType" }, { "type": "object", "name": "edata_filters_mimeType" }, { "type": "object", "name": "edata_filters_resourceType" }, { "type": "array", "name": "edata_filters_status" }, { "type": "array", "name": "edata_filters_objectType" }, { "type": "string", "name": "edata_filters_dialcodes" }, { "type": "object", "name": "edata_filters_framework" }, { "type": "array", "name": "edata_filters_channel_ne" }, { "type": "object", "name": "edata_sort" }, { "type": "string", "name": "context_pdata_ver" }, { "type": "string", "name": "context_pdata_id" }, { "type": "string", "name": "context_pdata_pid" }, { "type": "string", "name": "context_did" }, { "type": "string", "name": "context_env" }, { "type": "string", "name": "context_channel" }, { "type": "string", "name": "@version" }, { "type": "string", "name": "object_id" }, { "type": "string", "name": "object_type" }] }, "timestampSpec": { "column": "ets", "format": "auto" }, "metricsSpec": [{ "type": "doubleSum", "name": "eid", "fieldName": "eid" }, { "type": "doubleSum", "name": "syncts", "fieldName": "syncts" }, { "type": "doubleSum", "name": "edata_size", "fieldName": "edata_size" }, { "type": "doubleSum", "name": "edata_filters_compatibilityLevel_max", "fieldName": "edata_filters_compatibilityLevel_max" }, { "type": "doubleSum", "name": "edata_filters_compatibilityLevel_min", "fieldName": "edata_filters_compatibilityLevel_min" }, { "type": "doubleSum", "name": "@timestamp", "fieldName": "@timestamp" }], "granularitySpec": { "type": "uniform", "segmentGranularity": "DAY", "queryGranularity": "HOUR", "rollup": false } }, "tuningConfig": { "type": "kafka", "maxRowsPerSegment": 50000, "logParseExceptions": true }, "ioConfig": { "type": "kafka", "topic": "obsrv.telemetry.input", "consumerProperties": { "bootstrap.servers": "localhost:9092" }, "taskCount": 1, "replicas": 1, "taskDuration": "PT8H", "useEarliestOffset": false, "completionTimeout": "PT8H", "inputFormat": { "type": "json", "flattenSpec": { "useFieldDiscovery": true, "fields": [{ "type": "path", "expr": "$.eid", "name": "eid" }, { "type": "path", "expr": "$.syncts", "name": "syncts" }, { "type": "path", "expr": "$.edata.size", "name": "edata_size" }, { "type": "path", "expr": "$.edata.filters.compatibilityLevel.max", "name": "edata_filters_compatibilityLevel_max" }, { "type": "path", "expr": "$.edata.filters.compatibilityLevel.min", "name": "edata_filters_compatibilityLevel_min" }, { "type": "path", "expr": "$.@timestamp", "name": "@timestamp" }, { "type": "path", "expr": "$.flags.content_denorm", "name": "flags_content_denorm" }, { "type": "path", "expr": "$.mid", "name": "mid" }, { "type": "path", "expr": "$.type", "name": "type" }, { "type": "path", "expr": "$.tags[*]", "name": "tags" }, { "type": "path", "expr": "$.actor.id", "name": "actor_id" }, { "type": "path", "expr": "$.actor.type", "name": "actor_type" }, { "type": "path", "expr": "$.edata.topn[*].identifier", "name": "edata_topn[*]_identifier" }, { "type": "path", "expr": "$.edata.query", "name": "edata_query" }, { "type": "path", "expr": "$.edata.type", "name": "edata_type" }, { "type": "path", "expr": "$.edata.filters.contentType[*]", "name": "edata_filters_contentType" }, { "type": "path", "expr": "$.edata.filters.mimeType", "name": "edata_filters_mimeType" }, { "type": "path", "expr": "$.edata.filters.resourceType", "name": "edata_filters_resourceType" }, { "type": "path", "expr": "$.edata.filters.status[*]", "name": "edata_filters_status" }, { "type": "path", "expr": "$.edata.filters.objectType[*]", "name": "edata_filters_objectType" }, { "type": "path", "expr": "$.edata.filters.dialcodes", "name": "edata_filters_dialcodes" }, { "type": "path", "expr": "$.edata.filters.framework", "name": "edata_filters_framework" }, { "type": "path", "expr": "$.edata.filters.channel.ne[*]", "name": "edata_filters_channel_ne" }, { "type": "path", "expr": "$.edata.sort", "name": "edata_sort" }, { "type": "path", "expr": "$.context.pdata.ver", "name": "context_pdata_ver" }, { "type": "path", "expr": "$.context.pdata.id", "name": "context_pdata_id" }, { "type": "path", "expr": "$.context.pdata.pid", "name": "context_pdata_pid" }, { "type": "path", "expr": "$.context.did", "name": "context_did" }, { "type": "path", "expr": "$.context.env", "name": "context_env" }, { "type": "path", "expr": "$.context.channel", "name": "context_channel" }, { "type": "path", "expr": "$.@version", "name": "@version" }, { "type": "path", "expr": "$.object.id", "name": "object_id" }, { "type": "path", "expr": "$.object.type", "name": "object_type" }] } }, "appendToExisting": false } } }, "config": { "ingestion": { "indexCol": "syncts", "rollup": true, "granulariy": { "segments": "DAY", "query": "MINUTE" }, "taskCount": 1, "taskDuration": "PT3600S", "replicas": 1 }, "querying": { "rules": [{ "dataset": "telemetry-raw", "queryRules": { "groupBy": { "maxDateRange": 30 }, "scan": { "maxDateRange": 30 }, "maxResponseSize": 5000 } }] }, "processing": { "checkpointingInterval": 6000, "dedup": { "property": "mid", "retentionPeriod": 3600000 }, "consumerPrallelism": 1, "downStreamParallelism": 1, "compression": "snappy", "dataSize": 1572864 } } };
  public static MISSING_FIELDS = { "dataset": "telemetry-raw", "version": 1.0, "dataSchema": {}, "ingestionSchema": {} };
  public static INCORRECT_FIELD_FORMAT = { "dataset": "telemetry-raw", "version": 1.0, "dataSchema": "given as string instead of json", "ingestionSchema": {}, "config": { "ingestion": {}, "processing": {}, "querying": {} } }

}

class TestDataset {
  public static VALID_SCHEMA = {};
  public static INVALID_SCHEMA = {};
  public static MISSING_REQUIRED_FIELDS = {};
}

export { TestDruidQuery, TestDataIngestion, TestDataSchema };