---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}-{{ .Values.env }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector: 
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels: 
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.dockerhub }}/{{ .Values.repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        env:
        - name: druid_host
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: DRUID_HOST
        - name: druid_port
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: DRUID_PORT
        - name: kafka_host
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: KAFKA_HOST
        - name: kafka_port
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: KAFKA_PORT
        - name: kafka_topic_create 
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: KAFKA_TOPIC_CREATE
        - name: postgres_host
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: POSTGRES_HOST
        - name: postgres_port
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: POSTGRES_PORT
        - name: postgres_database 
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: POSTGRES_DATABASE
        - name: postgres_username
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: POSTGRES_USERNAME 
        - name: postgres_password
          valueFrom:
            configMapKeyRef:
              name: "{{ .Chart.Name }}-config"
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 3000

---
apiVersion: v1 
kind: Service
metadata:
  name: "{{ .Chart.Name }}-service"
  namespace: {{ .Values.namespace }}-{{ .Values.env }}
  labels:
    app: {{ .Chart.Name }}
spec:
  type: LoadBalancer
  ports:
  - name: http-{{ .Chart.Name }}
    protocol: TCP
    port: {{ .Values.network.targetport }}
  selector:
    app: {{ .Chart.Name }}
